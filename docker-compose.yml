version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: blackletter_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blackletter_backend
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - /app/venv
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blackletter_worker
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_WORKER=true
      - ENVIRONMENT=development
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - /app/venv
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A workers.celery_app worker --loglevel=info

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blackletter_frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend

volumes:
  redis_data:

networks:
  default:
    name: blackletter_network